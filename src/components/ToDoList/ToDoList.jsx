import React from "react";

//получаю todo и settodo переданные из app.js 
function ToDoList ({todo, setTodo}) {
 
  //функция для удаления todo
    //создаю переменную в которую положу новый массив в котором не будет выбранного нами элемента
    //передаю копию массива применяю мктод filter и говорю 
    //что перебераемый id не должен быть равен id полученый от кнопки удаления того обьекта который хочу удалить
    //в функцию setTodo передаю новый массив в котром отсутсвует удалённый обьект
    //тем самым я обновляю значение todo заменяя его на newTodo 
    function deleteTodo(id) {  
      let newTodo = [...todo].filter(item => item.id!== id);
      setTodo(newTodo);
    }

  //функия для изменения статуса задачи-todo
    //мне надо найти id того элемента который я передал через кнопку закрытия-изменения статуса задачи
    //если условие верное и такой id есть то меняю значение status задачи на противоположное
    //если элемент был найден я выхожу из условия и возвращаю весь массив
    //после  изменений обновляю statetodo
    function statusTodo(id) {
      let newTodo = [...todo].filter(item => {
        if (item.id === id) {
          item.status = !item.status;
          console.log('элемент найден задача закрыта/открыта');
        }
        return item;
      })
      setTodo(newTodo);
    }

  return (
    <div>
    {
      //при помощи MAP вывожу каждый обьект из массива todo в div
      //передаю уникальное значенеие key равное id обьекта 
      //на кнопку вешаю обработчик который будет вызывать функцию удаления аргументом котрой будет id обьекта 
      //добавляю кнопку схоже с удалением задачи но передаю функцию закрытия/открытия задачи
      todo.map( item => (
        <div key={item.id}>      
          <div>{item.title}</div>
          <button onClick={ () =>deleteTodo(item.id)}>Удалить задачу</button>
          <button onClick={ () =>statusTodo(item.id)}>открыть/закрыть задачу</button>
        </div>
      ))
    }
    </div>
  );
}

export default ToDoList;